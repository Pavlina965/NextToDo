// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Task {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  done      Boolean  @default(false)
  dueDate   DateTime @db.Date
  project   Project  @relation(fields: [projectId],references: [id])
  projectId Int     
  user      User     @relation(fields: [userId],references: [id])
  userId    Int
  taskTags  TaskTag[]
  tags      Tag[]    @relation("TaskTags")
  
}

model Project {
  id     Int     @id @default(autoincrement())
  title  String  @db.VarChar(255)
  tasks  Task[]
  user   User    @relation(fields: [userId],references: [id])
  userId Int

}

model User {
  id      Int      @id @default(autoincrement())
  // email   String   @unique
  name    String?  @db.VarChar(255)
  tasks   Task[]
  projects Project[]

}
model Tag{
  id      Int     @id @default(autoincrement())
  name    String  @db.VarChar(255) @unique
  taskTags  TaskTag[]
  tasks   Task[]  @relation("TaskTags")
}
model TaskTag{
  taskId  Int
  tagId   Int
  task    Task  @relation(fields: [taskId],references: [id],onDelete: Cascade)
  tag     Tag   @relation(fields: [tagId],references: [id],onDelete: Cascade)

  @@id([taskId,tagId])
}